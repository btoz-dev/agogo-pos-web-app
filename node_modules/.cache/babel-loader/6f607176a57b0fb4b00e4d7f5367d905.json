{"ast":null,"code":"import _classCallCheck from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch, Redirect, Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport decode from 'jwt-decode';\nimport UsersContainer from './containers/UsersContainer';\nimport Login from './components/logins/Login';\nimport InitialBalance from './components/balances/InitialBalance';\nimport Cashier from './components/cashier/Cashier';\nimport Fullscreen from \"react-full-screen\";\n\nvar isTokenExpired = function isTokenExpired(token) {\n  try {\n    var decoded = decode(token);\n\n    if (decoded.exp < Date.now() / 1000) {\n      // Checking if token is expired. N\n      return true;\n    } else return false;\n  } catch (err) {\n    return false;\n  }\n};\n\nvar isLoggedIn = function isLoggedIn() {\n  // Checks if there is a saved token and it's still valid\n  var token = sessionStorage.getItem('token'); // GEtting token from localstorage\n\n  return !!token && !isTokenExpired(token); // handwaiving here\n}; // const ProtectedRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => {\n//     console.log(\"GET CURRENT PATH\")\n//     console.log(props.match.path)\n//     return(\n//       isLoggedIn() === true\n//       ? <Component {...props} rootStore={props.rootStore} />\n//       : <Redirect to={{\n//           pathname: '/initial-balance',\n//           state: { from: props.location }\n//         }} />\n//     )\n//   }} />\n// );\n// const ProtectedRouteLogged = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => {\n//     console.log(\"GET CURRENT PATH\")\n//     console.log(props.match.path)\n//     return(\n//       isLoggedIn() === false\n//       ? <Component {...props} rootStore={props.rootStore} />\n//       : <Redirect to={{\n//           pathname: '/',\n//           state: { from: props.location }\n//         }} />\n//     )\n//   }} />\n// );\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activePath: '/'\n    };\n\n    _this.logout = function () {\n      // console.log(\"LOGOUT\")\n      sessionStorage.setItem('token', '');\n      sessionStorage.clear();\n    };\n\n    _this.activePath = function (props) {\n      // console.log(\"=== ACTIVE PATH ===\")\n      // console.log(props.match.path)\n      if (props.match.path !== _this.state.activePath) {\n        _this.setState({\n          activePath: props.match.path\n        }, function () {\n          console.log(_this.state.activePath);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log(isLoggedIn())\n      return React.createElement(Fullscreen, {\n        enabled: this.props.rootStore.state.isFull,\n        onChange: function onChange(isFull) {\n          return _this2.props.rootStore.setState({\n            isFull: isFull\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"footer\", {\n        className: \"Footer right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn-fullscreen\",\n        onClick: this.props.rootStore.goFull,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-expand-arrows-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), this.state.activePath === '/initial-balance' && React.createElement(\"a\", {\n        href: \"#\",\n        className: \"btn-logout\",\n        onClick: function onClick() {\n          return _this2.props.modalStore.toggleModal('saldo', '');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-power-off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          _this2.activePath(props);\n\n          return isLoggedIn() === true ? React.createElement(Redirect, {\n            to: {\n              pathname: '/initial-balance',\n              state: {\n                from: props.location\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }) : React.createElement(UsersContainer, Object.assign({}, props, {\n            rootStore: _this2.props.rootStore,\n            activePath: props.match.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login/:user_index\",\n        render: function render(props) {\n          _this2.activePath(props);\n\n          return isLoggedIn() === true ? React.createElement(Redirect, {\n            to: {\n              pathname: '/initial-balance',\n              state: {\n                from: props.location\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }) : React.createElement(Login, Object.assign({}, props, {\n            rootStore: _this2.props.rootStore,\n            modalStore: _this2.props.modalStore,\n            activePath: props.match.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/initial-balance\",\n        render: function render(props) {\n          _this2.activePath(props);\n\n          return isLoggedIn() === true ? React.createElement(InitialBalance, Object.assign({}, props, {\n            rootStore: _this2.props.rootStore,\n            modalStore: _this2.props.modalStore,\n            activePath: props.match.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          })) : React.createElement(Redirect, {\n            to: {\n              pathname: '/',\n              state: {\n                from: props.location\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/cashier\",\n        render: function render(props) {\n          _this2.activePath(props);\n\n          return isLoggedIn() === true ? React.createElement(Cashier, Object.assign({}, props, {\n            rootStore: _this2.props.rootStore,\n            modalStore: _this2.props.modalStore,\n            cartStore: _this2.props.cartStore,\n            productStore: _this2.props.productStore,\n            activePath: props.match.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          })) : React.createElement(Redirect, {\n            to: {\n              pathname: '/',\n              state: {\n                from: props.location\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/logout\",\n        render: function render() {\n          _this2.logout();\n\n          return React.createElement(Redirect, {\n            to: {\n              pathname: \"/\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\BTOZ\\Agogo\\agogo-pos-web-app-master\\src\\App.js"],"names":["React","Component","Route","BrowserRouter","Switch","Redirect","Link","Button","decode","UsersContainer","Login","InitialBalance","Cashier","Fullscreen","isTokenExpired","token","decoded","exp","Date","now","err","isLoggedIn","sessionStorage","getItem","App","state","activePath","logout","setItem","clear","props","match","path","setState","console","log","rootStore","isFull","goFull","modalStore","toggleModal","pathname","from","location","cartStore","productStore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, BrowserRouter, Switch, Redirect, Link } from 'react-router-dom'\nimport { Button } from 'reactstrap';\n\nimport decode from 'jwt-decode';\n\nimport UsersContainer from './containers/UsersContainer';\nimport Login from './components/logins/Login';\nimport InitialBalance from './components/balances/InitialBalance';\nimport Cashier from './components/cashier/Cashier';\n\nimport Fullscreen from \"react-full-screen\";\n\n\nconst isTokenExpired = (token) => {\n  try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n          return true;\n      }\n      else\n          return false;\n  }\n  catch (err) {\n      return false;\n  }\n}\n\nconst isLoggedIn = () => {\n  // Checks if there is a saved token and it's still valid\n  const token = sessionStorage.getItem('token') // GEtting token from localstorage\n  return !!token && !isTokenExpired(token) // handwaiving here\n}\n\n// const ProtectedRoute = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => {\n//     console.log(\"GET CURRENT PATH\")\n//     console.log(props.match.path)\n//     return(\n//       isLoggedIn() === true\n//       ? <Component {...props} rootStore={props.rootStore} />\n//       : <Redirect to={{\n//           pathname: '/initial-balance',\n//           state: { from: props.location }\n//         }} />\n//     )\n//   }} />\n// );\n\n// const ProtectedRouteLogged = ({ component: Component, ...rest }) => (\n//   <Route {...rest} render={(props) => {\n//     console.log(\"GET CURRENT PATH\")\n//     console.log(props.match.path)\n//     return(\n//       isLoggedIn() === false\n//       ? <Component {...props} rootStore={props.rootStore} />\n//       : <Redirect to={{\n//           pathname: '/',\n//           state: { from: props.location }\n//         }} />\n//     )\n//   }} />\n// );\n\nclass App extends Component {\n\n  state = {\n    activePath: '/'\n  }\n\n  logout = () => {\n    // console.log(\"LOGOUT\")\n    sessionStorage.setItem('token', '');\n    sessionStorage.clear();\n  }\n\n  activePath = (props) => {\n    // console.log(\"=== ACTIVE PATH ===\")\n    // console.log(props.match.path)\n    if(props.match.path !== this.state.activePath){\n      this.setState({\n        activePath: props.match.path\n      },\n      () => {\n\n        console.log(this.state.activePath)\n      })\n    }\n  }\n  \n  render() {\n    // console.log(isLoggedIn())\n\n    return (\n\n      <Fullscreen enabled={this.props.rootStore.state.isFull} onChange={isFull => this.props.rootStore.setState({isFull})}>\n\n        <footer className=\"Footer right\">                    \n          <a href=\"#\" className=\"btn-fullscreen\" onClick={this.props.rootStore.goFull} >\n            <i className=\"fas fa-expand-arrows-alt\"></i>\n          </a>\n\n          {this.state.activePath === '/initial-balance' &&\n          <a href=\"#\" className=\"btn-logout\" onClick={() => this.props.modalStore.toggleModal('saldo', '')} >\n            <i class=\"fas fa-power-off\"></i>\n          </a>\n          }\n        </footer>\n\n        <BrowserRouter>\n          <div className=\"App\">\n\n            {/* <h1 className=\"text-primary text-center\">Page = {this.props.rootStore.state.page}</h1> */}\n            \n            {/* GAKTAUNYA BISA KASIH FUNCTION DI ROUTE\n            INI GAK BSIA KRN ROUTENYA DI PROTECT */}\n\n            <Switch>\n              <Route exact path='/'\n                render={(props) => {\n                  this.activePath(props);\n                  return(\n                    isLoggedIn() === true\n                    ? <Redirect to={{ pathname: '/initial-balance', state: { from: props.location } }} />\n                    : <UsersContainer {...props} \n                      rootStore={this.props.rootStore} \n                      activePath={props.match.path} />\n                  )\n                }}\n              />\n              \n              <Route path='/login/:user_index'\n                render={(props) => {\n                  this.activePath(props);\n                  return(\n                    isLoggedIn() === true\n                    ? <Redirect to={{ pathname: '/initial-balance', state: { from: props.location } }} />\n                    : <Login {...props} \n                      rootStore={this.props.rootStore} \n                      modalStore={this.props.modalStore} \n                      activePath={props.match.path} />\n                  )\n                }}\n              />\n\n              <Route path='/initial-balance'\n                render={(props) => {\n                  this.activePath(props);\n                  return(\n                    isLoggedIn() === true\n                    ? <InitialBalance {...props} \n                      rootStore={this.props.rootStore} \n                      modalStore={this.props.modalStore} \n                      activePath={props.match.path} /> \n                    : <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n                  )\n                }}\n              />\n\n              <Route path='/cashier'\n                render={(props) => {\n                  this.activePath(props);\n                  return(\n                    isLoggedIn() === true\n                    ? <Cashier {...props} \n                        rootStore={this.props.rootStore} \n                        modalStore={this.props.modalStore} \n                        cartStore={this.props.cartStore} \n                        productStore={this.props.productStore} \n                        activePath={props.match.path} />\n                    : <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n                  )\n                }}\n              />\n\n              <Route path=\"/logout\" \n                render={() => {\n                  this.logout();\n                  return <Redirect to={{ pathname: \"/\" }} />;\n                }}\n              />\n\n              \n            </Switch>\n            \n          </div>\n        </BrowserRouter>\n\n      </Fullscreen>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}