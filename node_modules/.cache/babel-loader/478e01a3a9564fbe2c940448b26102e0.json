{"ast":null,"code":"import _toConsumableArray from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport { Container } from 'unstated';\nvar initialState = {\n  items: [],\n  selectedProduct: {},\n  isAdded: false,\n  isCalcNumericCartOpen: false,\n  inputQtyCartItem: '',\n  selectedQtyID: '',\n  layoutName: \"default\",\n  onReset: false,\n  activeItem: -1,\n  totalAmount: 0,\n  discountAmount: 0,\n  discountPercentage: 0,\n  expenseAmount: 0,\n  grandTotalAmount: 0,\n  grandTotalAmountDiscount: 0,\n  isCashierOverlayShow: false,\n  isPaymentCheckoutShow: false,\n  valueInputPayment: '',\n  activeInputPayment: '',\n  discountType: 'Rp',\n  changePayment: 0\n};\n\nvar CartsContainer =\n/*#__PURE__*/\nfunction (_Container) {\n  _inherits(CartsContainer, _Container);\n\n  function CartsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, CartsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CartsContainer).call(this, props));\n\n    _this.clearCart = function () {\n      console.log(\"CLEAR CART\");\n\n      _this.setState(initialState);\n    };\n\n    _this.onAddToCart = _this.onAddToCart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onRemoveFromCart = _this.onRemoveFromCart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.setSelectedQtyID = function (idx, id, currentQty) {\n      _this.setState({\n        selectedQtyID: id,\n        inputQtyCartItem: currentQty,\n        isCalcNumericCartOpen: true,\n        onReset: true,\n        activeItem: idx,\n        isCashierOverlayShow: true\n      });\n    };\n\n    _this.onChange = function (inputQtyCartItem) {\n      _this.setState({\n        inputQtyCartItem: inputQtyCartItem\n      }); // console.log(\"Input changed\", inputQtyCartItem);\n\n    };\n\n    _this.onKeyPress = function (button) {\n      // console.log(\"Button pressed\", button);\n      if (button === \"{enter}\") {\n        _this.onEnter(_this.state.selectedQtyID, _this.state.inputQtyCartItem);\n      }\n    };\n\n    _this.onEnter = function (id, newQty) {\n      // console.log(\"Button ENTER pressed\");\n      _this.onUpdateItem(id, newQty);\n    };\n\n    _this.onOpenCalc = function () {\n      _this.setState({\n        isCalcNumericCartOpen: true\n      });\n    };\n\n    _this.onCloseCalc = function () {\n      _this.setState({\n        isCalcNumericCartOpen: false,\n        activeItem: -1,\n        isCashierOverlayShow: false\n      });\n    };\n\n    _this.toggleCashierOverlayShow = function () {\n      _this.setState({\n        isCashierOverlayShow: !_this.state.isCashierOverlayShow\n      });\n    };\n\n    _this.paymentCheckout = function () {\n      // console.log(\"paymentCheckout\")\n      _this.togglePaymentCheckoutShow();\n    };\n\n    _this.togglePaymentCheckoutShow = function () {\n      _this.setState({\n        isPaymentCheckoutShow: !_this.state.isPaymentCheckoutShow\n      });\n    };\n\n    _this.setActiveInputPayment = function (event) {\n      // console.log('event', event.target.id)\n      document.getElementById(event.target.id).focus();\n\n      _this.setState({\n        activeInputPayment: event.target.id\n      }, function () {\n        console.log(\"setActiveInput\", _this.state.activeInputPayment);\n      });\n    };\n\n    _this.onChangePayment = function (valueInputPayment) {\n      _this.setState({\n        valueInputPayment: valueInputPayment\n      }, function () {\n        _this.sumGrandTotalAmount();\n      });\n\n      console.log(\"Input changed\", valueInputPayment);\n    };\n\n    _this.onKeyPressPayment = function (button) {\n      console.log(\"Button pressed\", button);\n\n      if (button === \"{rp}\") {\n        _this.setState({\n          discountType: 'Rp'\n        });\n      }\n\n      if (button === \"{percentage}\") {\n        _this.setState({\n          discountType: '%'\n        });\n      }\n\n      if (button === \"{enter}\") {\n        _this.onEnterPayment();\n      }\n    };\n\n    _this.onResetPayment = function () {\n      _this.setState({\n        grandTotalAmountDiscount: _this.state.totalAmount,\n        discountAmount: 0\n      });\n    };\n\n    _this.onEnterPayment = function () {\n      console.log(\"Button ENTER pressed\");\n\n      _this.sumChangePayment();\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(CartsContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        windowInnerHeight: window.innerHeight\n      }, function () {\n        _this2.setState({\n          productItemsHeight: _this2.state.windowInnerHeight - 114\n        });\n      });\n    } // ===============\n    // CART ACTION\n    // ===============\n\n  }, {\n    key: \"onAddToCart\",\n    value: function onAddToCart(selectedProduct) {\n      var _this3 = this;\n\n      var id = selectedProduct.id;\n      var qty = selectedProduct.qty;\n      var index = this.state.items.findIndex(function (x) {\n        return x.id === id;\n      });\n\n      if (index === -1 || id === index) {\n        // console.log(\"ADD NEW\")\n        this.setState({\n          items: _toConsumableArray(this.state.items).concat([selectedProduct])\n        }, function () {\n          // console.log('ITEMS Updated!');\n          // console.log(this.state.items)\n          _this3.sumTotalAmount();\n\n          _this3.setState({\n            isAdded: true,\n            selectedProduct: {}\n          }, function () {\n            _this3.sumGrandTotalAmount();\n\n            setTimeout(function () {\n              _this3.setState({\n                isAdded: false\n              });\n            }, 3500);\n          });\n        });\n      } else {\n        var currentQty = this.state.items[index].qty; // console.log(\"CURRENT QTY\", currentQty)\n        // console.log(\"UPDATE w/ SELECTED ID\", qty, id)\n\n        this.onUpdateItem(id, Number(currentQty) + 1);\n      }\n    }\n  }, {\n    key: \"addSelectedProduct\",\n    value: function addSelectedProduct(idx, id, name, qty, price) {\n      var _this4 = this;\n\n      this.setState({\n        selectedProduct: {\n          idx: idx,\n          id: id,\n          name: name,\n          qty: qty,\n          price: price\n        }\n      }, function () {\n        _this4.onAddToCart(_this4.state.selectedProduct);\n      });\n    }\n  }, {\n    key: \"onUpdateItem\",\n    value: function onUpdateItem(id, newQty) {\n      var _this5 = this;\n\n      var index = this.state.items.findIndex(function (x) {\n        return x.id === id;\n      });\n      var currentQty = this.state.items[index].qty;\n      var updateQty = currentQty + 1; // console.log(currentQty)\n\n      if (index === -1) {\n        console.log(\"ERROR\"); // handle error\n      } else {\n        this.setState({\n          items: _toConsumableArray(this.state.items.slice(0, index)).concat([Object.assign({}, this.state.items[index], {\n            qty: newQty\n          })], _toConsumableArray(this.state.items.slice(index + 1)))\n        }, function () {\n          // this.sumTotalAmountPerItem(index)\n          _this5.sumTotalAmount();\n\n          setTimeout(function () {\n            _this5.sumGrandTotalAmount();\n          }, 1);\n\n          _this5.onCloseCalc();\n        });\n      }\n    }\n  }, {\n    key: \"onRemoveFromCart\",\n    value: function onRemoveFromCart(item) {\n      var _this6 = this;\n\n      var newArray = _toConsumableArray(this.state.items);\n\n      newArray.splice(item, 1);\n      this.setState({\n        items: newArray\n      }, function () {\n        _this6.sumTotalAmount();\n\n        setTimeout(function () {\n          _this6.sumGrandTotalAmount();\n        }, 10);\n      });\n    }\n  }, {\n    key: \"sumTotalAmountPerItem\",\n    value: function sumTotalAmountPerItem(idx) {\n      var total = 0;\n      var item = this.state.items[idx];\n      total = item.price * parseInt(item.qty); // console.log(\"TOTAL HARGA PER ITEM\", total)\n\n      return total;\n    }\n  }, {\n    key: \"sumTotalAmount\",\n    value: function sumTotalAmount() {\n      var total = 0;\n      var items = this.state.items;\n\n      for (var i = 0; i < items.length; i++) {\n        total += items[i].price * parseInt(items[i].qty);\n      }\n\n      this.setState({\n        totalAmount: total\n      });\n    }\n  }, {\n    key: \"sumGrandTotalAmount\",\n    value: function sumGrandTotalAmount() {\n      var _this7 = this;\n\n      var sumTotalAmount = this.state.totalAmount;\n      var otherExpenses = parseInt(this.state.expenseAmount);\n      var grandTotalAmount = parseInt(sumTotalAmount - otherExpenses);\n      var discountAmount;\n\n      if (this.state.discountType === '%') {\n        discountAmount = parseInt(sumTotalAmount * (this.discountPercentage() / 100));\n      }\n\n      if (this.state.discountType === 'Rp') {\n        console.log(\"this.discountPrice\", this.discountPrice());\n        discountAmount = parseInt(this.discountPrice());\n      }\n\n      this.setState({\n        discountAmount: discountAmount,\n        grandTotalAmount: grandTotalAmount\n      }, function () {\n        var grandTotalAmountDiscount = parseInt(sumTotalAmount - discountAmount);\n\n        _this7.setState({\n          grandTotalAmountDiscount: grandTotalAmountDiscount\n        }, function () {\n          _this7.sumChangePayment();\n        });\n      });\n    }\n  }, {\n    key: \"discountPercentage\",\n    value: function discountPercentage() {\n      var discount = this.state.valueInputPayment[\"paymentDiscount\"];\n\n      if (discount === undefined || discount === '') {\n        discount = 0;\n      }\n\n      if (discount > 100) {\n        discount = 100;\n      }\n\n      console.log(\"DISCOUNT\", discount);\n      this.setState({\n        discountPercentage: discount\n      });\n      return discount;\n    }\n  }, {\n    key: \"discountPrice\",\n    value: function discountPrice() {\n      var discount = this.state.valueInputPayment[\"paymentDiscount\"];\n      var sumTotalAmount = parseInt(this.state.totalAmount);\n\n      if (discount === undefined || discount === '') {\n        discount = 0;\n      }\n\n      if (discount >= sumTotalAmount) {\n        discount = sumTotalAmount;\n      }\n\n      return discount;\n    }\n  }, {\n    key: \"sumChangePayment\",\n    value: function sumChangePayment() {\n      var totalPayment = parseInt(this.state.valueInputPayment[\"paymentTotal\"]);\n      console.log(\"sumChangePayment\", totalPayment);\n\n      if (isNaN(totalPayment)) {\n        totalPayment = 0;\n      }\n\n      var grandTotalAmountDiscount = parseInt(this.state.grandTotalAmountDiscount);\n      var changePayment = parseInt(totalPayment - grandTotalAmountDiscount);\n      this.setState({\n        changePayment: changePayment\n      });\n    } // ===============\n    // KEYBOARD ACTION\n    // ===============\n\n  }, {\n    key: \"moveCaretAtEnd\",\n    value: function moveCaretAtEnd(e) {\n      var temp_value = e.target.value;\n      e.target.value = '';\n      e.target.value = temp_value;\n    }\n  }]);\n\n  return CartsContainer;\n}(Container);\n\nexport default CartsContainer;","map":{"version":3,"sources":["D:\\BTOZ\\Agogo\\agogo-pos-web-app-master\\src\\containers\\CartsContainer.js"],"names":["Container","initialState","items","selectedProduct","isAdded","isCalcNumericCartOpen","inputQtyCartItem","selectedQtyID","layoutName","onReset","activeItem","totalAmount","discountAmount","discountPercentage","expenseAmount","grandTotalAmount","grandTotalAmountDiscount","isCashierOverlayShow","isPaymentCheckoutShow","valueInputPayment","activeInputPayment","discountType","changePayment","CartsContainer","props","clearCart","console","log","setState","onAddToCart","bind","onRemoveFromCart","setSelectedQtyID","idx","id","currentQty","onChange","onKeyPress","button","onEnter","state","newQty","onUpdateItem","onOpenCalc","onCloseCalc","toggleCashierOverlayShow","paymentCheckout","togglePaymentCheckoutShow","setActiveInputPayment","event","document","getElementById","target","focus","onChangePayment","sumGrandTotalAmount","onKeyPressPayment","onEnterPayment","onResetPayment","sumChangePayment","windowInnerHeight","window","innerHeight","productItemsHeight","qty","index","findIndex","x","sumTotalAmount","setTimeout","Number","name","price","updateQty","slice","Object","assign","item","newArray","splice","total","parseInt","i","length","otherExpenses","discountPrice","discount","undefined","totalPayment","isNaN","e","temp_value","value"],"mappings":"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","sourcesContent":["import { Container } from 'unstated'\n\nconst initialState = {\n  items: [],\n  selectedProduct: {},\n  isAdded: false,\n  isCalcNumericCartOpen: false,\n  inputQtyCartItem: '',\n  selectedQtyID: '',\n  layoutName: \"default\",\n  onReset: false,\n  activeItem: -1,\n  totalAmount: 0,\n  discountAmount: 0,\n  discountPercentage: 0,\n  expenseAmount: 0,\n  grandTotalAmount: 0,\n  grandTotalAmountDiscount: 0,\n  isCashierOverlayShow: false,\n  isPaymentCheckoutShow: false,\n  valueInputPayment: '',\n  activeInputPayment: '',\n  discountType: 'Rp',\n  changePayment: 0\n};\n\nclass CartsContainer extends Container {\n\n  constructor(props) {\n    super(props)\n    this.state = initialState;\n  }\n\n  clearCart = () => {\n    console.log(\"CLEAR CART\")\n    this.setState(initialState);\n  }\n\n\n  componentWillMount(){\n    this.setState({\n      windowInnerHeight: window.innerHeight\n    },\n      () => {\n        this.setState({\n          productItemsHeight: this.state.windowInnerHeight - 114\n        })\n      }\n    );\n  }\n\n\n  // ===============\n  // CART ACTION\n  // ===============\n  onAddToCart = this.onAddToCart.bind(this);\n  onRemoveFromCart = this.onRemoveFromCart.bind(this);\n\n  onAddToCart(selectedProduct) {\n\n    let id = selectedProduct.id\n    let qty = selectedProduct.qty\n    let index = this.state.items.findIndex( x => x.id === id);\n\n    if (index === -1 || id === index){\n      // console.log(\"ADD NEW\")\n      this.setState({\n        items: [...this.state.items, selectedProduct]\n      },\n        () => {\n          // console.log('ITEMS Updated!');\n          // console.log(this.state.items)\n\n          this.sumTotalAmount()\n\n          this.setState({\n            isAdded: true,\n            selectedProduct: {}\n          },\n            () => {\n              this.sumGrandTotalAmount()\n\n              setTimeout(() => {\n                this.setState({\n                  isAdded: false\n                });\n              }, 3500);\n            }\n          );\n        }\n      );\n    }else{\n      let currentQty = this.state.items[index].qty\n      // console.log(\"CURRENT QTY\", currentQty)\n\n      // console.log(\"UPDATE w/ SELECTED ID\", qty, id)\n      this.onUpdateItem(id, Number(currentQty) + 1)\n    }\n    \n  }\n\n  addSelectedProduct(idx, id, name, qty, price) {\n    this.setState(\n      {\n        selectedProduct: {\n          idx: idx,\n          id: id,\n          name: name,\n          qty: qty,\n          price: price\n        }\n      },\n      () => {\n        this.onAddToCart(this.state.selectedProduct);\n      }\n    );\n  }\n\n  setSelectedQtyID = (idx, id, currentQty) => {\n    this.setState({\n      selectedQtyID: id,\n      inputQtyCartItem: currentQty,\n      isCalcNumericCartOpen: true,\n      onReset: true,\n      activeItem: idx,\n      isCashierOverlayShow: true\n    });\n  }\n\n  onUpdateItem(id, newQty) {\n    let index = this.state.items.findIndex( x => x.id === id);\n    let currentQty = this.state.items[index].qty;\n    let updateQty = currentQty + 1;\n    // console.log(currentQty)\n    if (index === -1){\n      console.log(\"ERROR\")\n      // handle error\n    }else{\n      this.setState({\n        items: [\n           ...this.state.items.slice(0,index),\n           Object.assign({}, this.state.items[index], {qty: newQty}),\n           ...this.state.items.slice(index+1)\n        ]\n      },\n        () => {\n          // this.sumTotalAmountPerItem(index)\n          this.sumTotalAmount()\n          setTimeout(() => {\n            this.sumGrandTotalAmount()\n          }, 1);\n          this.onCloseCalc()\n        } \n      );\n    }\n  }\n\n  onRemoveFromCart(item) {\n    const newArray = [...this.state.items];\n    newArray.splice(item, 1);\n\n    this.setState({\n      items: newArray\n    },\n      () => {\n        this.sumTotalAmount()\n        setTimeout(() => {\n          this.sumGrandTotalAmount()\n        }, 10);\n      }\n    );\n  }\n\n  sumTotalAmountPerItem(idx) {\n    let total = 0;\n    let item = this.state.items[idx];\n    total = item.price * parseInt(item.qty);\n    // console.log(\"TOTAL HARGA PER ITEM\", total)\n    return total\n  }\n  sumTotalAmount() {\n    let total = 0;\n    let items = this.state.items;\n    for (var i = 0; i < items.length; i++) {\n      total += items[i].price * parseInt(items[i].qty);\n    }\n    this.setState({\n      totalAmount: total\n    });\n  }\n  sumGrandTotalAmount() {\n    let sumTotalAmount = this.state.totalAmount\n    let otherExpenses = parseInt( this.state.expenseAmount )\n    let grandTotalAmount = parseInt( sumTotalAmount - otherExpenses )\n    \n    let discountAmount;\n    if(this.state.discountType === '%'){\n      discountAmount = parseInt( sumTotalAmount * (this.discountPercentage()/100) )\n    }\n    if(this.state.discountType === 'Rp'){\n      console.log(\"this.discountPrice\", this.discountPrice())\n      discountAmount = parseInt( this.discountPrice() )\n    }\n\n    this.setState({\n      discountAmount: discountAmount,\n      grandTotalAmount: grandTotalAmount\n    },\n      () => {\n        let grandTotalAmountDiscount = parseInt( sumTotalAmount - discountAmount )\n        this.setState({\n          grandTotalAmountDiscount: grandTotalAmountDiscount\n        },\n          () => {\n            this.sumChangePayment()\n          }\n        )\n      }\n    )\n  }\n\n  discountPercentage(){\n    let discount = this.state.valueInputPayment[\"paymentDiscount\"]\n    if(discount === undefined || discount === ''){\n      discount = 0;\n    }\n    if(discount > 100){\n      discount = 100;\n    }\n    console.log(\"DISCOUNT\", discount)\n    this.setState({\n      discountPercentage: discount\n    })\n    return discount\n  }\n\n  discountPrice(){\n    let discount = this.state.valueInputPayment[\"paymentDiscount\"]\n    let sumTotalAmount = parseInt( this.state.totalAmount )\n    if(discount === undefined || discount === ''){\n      discount = 0;\n    }\n    if(discount >= sumTotalAmount){\n      discount = sumTotalAmount;\n    }\n    return discount\n  }\n\n  sumChangePayment() {\n    let totalPayment = parseInt( this.state.valueInputPayment[\"paymentTotal\"] )\n    console.log(\"sumChangePayment\", totalPayment)\n    if(isNaN(totalPayment)){\n      totalPayment = 0\n    }\n\n    let grandTotalAmountDiscount =  parseInt( this.state.grandTotalAmountDiscount )\n    let changePayment = parseInt( totalPayment - grandTotalAmountDiscount )\n    \n    this.setState({\n      changePayment: changePayment\n    })\n  }\n\n\n  // ===============\n  // KEYBOARD ACTION\n  // ===============\n  onChange = inputQtyCartItem => {\n    this.setState({\n      inputQtyCartItem: inputQtyCartItem\n    });\n    // console.log(\"Input changed\", inputQtyCartItem);\n  };\n\n  onKeyPress = (button) => {\n    // console.log(\"Button pressed\", button);\n    if (button === \"{enter}\") {\n      this.onEnter(this.state.selectedQtyID, this.state.inputQtyCartItem);\n    }\n  };\n\n  onEnter = (id, newQty) => {\n    // console.log(\"Button ENTER pressed\");\n    this.onUpdateItem(id, newQty)\n  };\n\n  onOpenCalc = () =>{\n    this.setState({\n      isCalcNumericCartOpen: true\n    })\n  }\n\n  onCloseCalc = () =>{\n    this.setState({\n      isCalcNumericCartOpen: false,\n      activeItem: -1,\n      isCashierOverlayShow: false\n    })\n  }\n  \n  // /END KEYBOARD ACTION\n\n\n  toggleCashierOverlayShow = () => {\n    this.setState({\n      isCashierOverlayShow: !this.state.isCashierOverlayShow\n    })\n  }\n\n\n\n  // ===============\n  // PAYMENT ACTIONS\n  // ===============\n  paymentCheckout = () => {\n    // console.log(\"paymentCheckout\")\n    this.togglePaymentCheckoutShow()\n  }\n\n  togglePaymentCheckoutShow = () => {\n    this.setState({\n      isPaymentCheckoutShow: !this.state.isPaymentCheckoutShow\n    })\n  }\n\n  moveCaretAtEnd(e) {\n    let temp_value = e.target.value\n    e.target.value = ''\n    e.target.value = temp_value\n  }\n\n  setActiveInputPayment = (event) => {\n    // console.log('event', event.target.id)\n    document.getElementById(event.target.id).focus();\n    this.setState({\n      activeInputPayment: event.target.id\n    },\n      () => {\n        console.log(\"setActiveInput\", this.state.activeInputPayment)\n      }\n    );\n  }\n\n  onChangePayment = valueInputPayment => {\n    this.setState({\n      valueInputPayment: valueInputPayment\n    },\n      () =>{\n        this.sumGrandTotalAmount()\n      }\n    );\n    console.log(\"Input changed\", valueInputPayment);\n  };\n\n  onKeyPressPayment = (button) => {\n    console.log(\"Button pressed\", button);\n\n    if (button === \"{rp}\") {\n      this.setState({\n        discountType: 'Rp'\n      })\n    }\n    if (button === \"{percentage}\") {\n      this.setState({\n        discountType: '%'\n      })\n    }\n    if (button === \"{enter}\") {\n      this.onEnterPayment();\n    }\n  };\n\n  onResetPayment = () => {\n    this.setState({\n      grandTotalAmountDiscount: this.state.totalAmount,\n      discountAmount: 0\n    })\n  }\n\n  onEnterPayment = () => {\n    console.log(\"Button ENTER pressed\");\n    this.sumChangePayment()\n  };\n\n}\n\nexport default CartsContainer"]},"metadata":{},"sourceType":"module"}