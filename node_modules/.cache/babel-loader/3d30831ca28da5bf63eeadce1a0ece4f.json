{"ast":null,"code":"var _jsxFileName = \"D:\\\\BTOZ\\\\Agogo\\\\agogo-pos-web-app-master\\\\src\\\\components\\\\carts\\\\CartItem.jsx\";\nimport React from 'react';\nimport { Input } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\n\nvar CartItem = function CartItem(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"item-name\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.title), React.createElement(\"td\", {\n    className: \"item-delete text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-backspace btn-delete-item\",\n    onClick: function onClick() {\n      return props.cartStore.onRemoveFromCart(props.idx);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"item-qty text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: props.cartStore.state.activeItem === props.idx ? 'btn btn-danger focus' : 'btn btn-danger',\n    id: \"qty\" + props.id,\n    name: \"qty\" + props.id,\n    type: \"number\",\n    size: \"sm\",\n    placeholder: props.qty,\n    onClick: function onClick() {\n      return props.cartStore.setSelectedQtyID(props.idx, props.id, props.qty);\n    },\n    readonly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    className: \"text-right item-price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(NumberFormat, {\n    value: props.cartStore.sumTotalAmountPerItem(props.idx),\n    displayType: 'text',\n    thousandSeparator: '.',\n    decimalSeparator: ',',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["D:\\BTOZ\\Agogo\\agogo-pos-web-app-master\\src\\components\\carts\\CartItem.jsx"],"names":["React","Input","NumberFormat","CartItem","props","title","cartStore","onRemoveFromCart","idx","state","activeItem","id","qty","setSelectedQtyID","sumTotalAmountPerItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,KAAK,CAACC,KAA7C,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,kCAAb;AAAgD,IAAA,OAAO,EAAE;AAAA,aAAMD,KAAK,CAACE,SAAN,CAAgBC,gBAAhB,CAAiCH,KAAK,CAACI,GAAvC,CAAN;AAAA,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEJ,KAAK,CAACE,SAAN,CAAgBG,KAAhB,CAAsBC,UAAtB,KAAqCN,KAAK,CAACI,GAA3C,GAAiD,sBAAjD,GAA0E,gBADvF;AAEE,IAAA,EAAE,EAAE,QAAMJ,KAAK,CAACO,EAFlB;AAGE,IAAA,IAAI,EAAE,QAAMP,KAAK,CAACO,EAHpB;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,WAAW,EAAEP,KAAK,CAACQ,GANrB;AAOE,IAAA,OAAO,EAAE;AAAA,aAAMR,KAAK,CAACE,SAAN,CAAgBO,gBAAhB,CAAiCT,KAAK,CAACI,GAAvC,EAA4CJ,KAAK,CAACO,EAAlD,EAAsDP,KAAK,CAACQ,GAA5D,CAAN;AAAA,KAPX;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAqBE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAER,KAAK,CAACE,SAAN,CAAgBQ,qBAAhB,CAAsCV,KAAK,CAACI,GAA5C,CAArB;AAAuE,IAAA,WAAW,EAAE,MAApF;AAA4F,IAAA,iBAAiB,EAAE,GAA/G;AAAoH,IAAA,gBAAgB,EAAE,GAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,CADF;AA2BD,CA5BD;;AA8BA,eAAeL,QAAf","sourcesContent":["import React from 'react'\nimport { Input } from 'reactstrap';\nimport NumberFormat from 'react-number-format';\n\nconst CartItem = (props) => {\n  return (\n    <tr>\n      <td className=\"item-name\" scope=\"row\">{props.title}</td>\n      <td className=\"item-delete text-right\">\n        <i className=\"fas fa-backspace btn-delete-item\" onClick={() => props.cartStore.onRemoveFromCart(props.idx)} />\n      </td>\n      <td className=\"item-qty text-center\">\n        <Input \n          className={props.cartStore.state.activeItem === props.idx ? 'btn btn-danger focus' : 'btn btn-danger'}\n          id={\"qty\"+props.id} \n          name={\"qty\"+props.id} \n          type=\"number\" \n          size=\"sm\" \n          placeholder={props.qty} \n          onClick={() => props.cartStore.setSelectedQtyID(props.idx, props.id, props.qty)}\n          readonly\n        />\n        {/* <input id=\"input1\" onFocus={this.setActiveInput} value={this.state.input['input1'] || \"\"}/>\n        <input id=\"input2\" onFocus={this.setActiveInput} value={this.state.input['input2'] || \"\"}/> */}\n\n        {/* <Button onClick={() => props.cartStore.onUpdateItem(props.id)}> + </Button> */}\n      </td>\n      <td className=\"text-right item-price\">\n        <NumberFormat value={props.cartStore.sumTotalAmountPerItem(props.idx)} displayType={'text'} thousandSeparator={'.'} decimalSeparator={','}  />\n      </td>\n    </tr>\n  )\n}\n\nexport default CartItem"]},"metadata":{},"sourceType":"module"}